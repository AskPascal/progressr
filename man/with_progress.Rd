% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_progress.R
\name{with_progress}
\alias{with_progress}
\title{Evaluate Expression while Handling Progress Updates}
\usage{
with_progress(expr, handlers = getOption("progressr.handlers",
  txtprogressbar_handler()), cleanup = TRUE)
}
\arguments{
\item{expr}{An \R expression to evaluate.}

\item{handlers}{A progression handler or a list of them.
If @NULL or an empty list, progress updates are ignored.}

\item{cleanup}{If TRUE, all progression handlers will be shutdown
at the end regardless of the progression is complete or not.}
}
\description{
Evaluate Expression while Handling Progress Updates
}
\examples{
x <- 1:10

## Without progress updates
y <- slow_sum(x)


## Progress reported via txtProgressBar (default)
if (requireNamespace("utils", quietly = TRUE)) {
  with_progress({
    y <- slow_sum(x)
  })
}

## Progress reported via tcltk::tkProgressBar
if (requireNamespace("tcltk", quietly = TRUE)) {
  with_progress({
    y <- slow_sum(x)
  }, tkprogressbar_handler)
}

## Progress reported via progress::progress_bar)
if (requireNamespace("progress", quietly = TRUE)) {
  with_progress({
    y <- slow_sum(x)
  }, progress_handler)
}

## Progress reported via txtProgressBar + beepr::beep
if (requireNamespace("utils", quietly = TRUE) && requireNamespace("beepr", quietly = TRUE)) {
  with_progress({
    with_progress({
      y <- slow_sum(x)
    }, txtprogressbar_handler(style = 3L))
  }, beepr_handler)
}

## Progress reported via txtProgressBar, beepr::beep, notifier::notify,
## if available.
handlers <- list()
if (requireNamespace("utils", quietly = TRUE)) {
  handlers <- c(handlers, list(txtprogressbar_handler()))
}
if (requireNamespace("beepr", quietly = TRUE)) {
  handlers <- c(handlers, list(beepr_handler()))
}
if (requireNamespace("notifier", quietly = TRUE)) {
  handlers <- c(handlers, list(notifier_handler(times = 3L, interval = 0.1)))
}
oopts <- options(progressr.handlers = handlers)

with_progress({
  y <- slow_sum(1:30)
})

options(oopts)
}
